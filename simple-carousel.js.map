{"version":3,"file":"simple-carousel.js","sourceRoot":"","sources":["src/simple-carousel.ts"],"names":[],"mappings":"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","sourcesContent":["import {LitElement, html, css} from 'lit';\r\nimport {\r\n  customElement,\r\n  property,\r\n  queryAssignedElements,\r\n  state,\r\n} from 'lit/decorators.js';\r\nimport {styleMap} from 'lit/directives/style-map.js';\r\nimport './slide-button.js';\r\nimport {BOOTSTRAP_CHEVRON_RIGHT, BOOTSTRAP_CHEVRON_LEFT} from './constants.js';\r\n\r\n@customElement('simple-carousel')\r\nexport class SimpleCarousel extends LitElement {\r\n  static override styles = css`\r\n    :host {\r\n      display: flex;\r\n      flex-direction: row;\r\n      align-items: center;\r\n    }\r\n\r\n    #container {\r\n      border-radius: 24px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      flex: 1;\r\n      margin: 0 18px;\r\n      padding: 1em;\r\n      overflow: hidden;\r\n      position: relative;\r\n      box-shadow: var(--shadow, gray) 0.3em 0.3em 0.4em,\r\n        var(--highlight, white) -0.1em -0.1em 0.2em;\r\n    }\r\n\r\n    ::slotted(.slide-hidden) {\r\n      display: none;\r\n    }\r\n    ::slotted(*) {\r\n      position: absolute;\r\n      padding: 1em;\r\n    }\r\n  `;\r\n\r\n  @state() private containerHeight = 0;\r\n  @property({type: Number})\r\n  slideIndex = 0;\r\n\r\n  @queryAssignedElements()\r\n  private readonly slideElements!: HTMLElement[];\r\n\r\n  override render() {\r\n    const containerStyles = {\r\n      height: `${this.containerHeight}px`,\r\n    };\r\n    return html`\r\n      <slide-button @click=${this.navigateToPrevSlide}\r\n        >${BOOTSTRAP_CHEVRON_LEFT}</slide-button\r\n      >\r\n      <div id=\"container\" style=\"${styleMap(containerStyles)}\">\r\n        <slot></slot>\r\n      </div>\r\n      <slide-button @click=${this.navigateToNextSlide}\r\n        >${BOOTSTRAP_CHEVRON_RIGHT}</slide-button\r\n      >\r\n    `;\r\n  }\r\n\r\n  override firstUpdated() {\r\n    this.containerHeight = getMaxElHeight(this.slideElements);\r\n    this.initializeSlide();\r\n  }\r\n\r\n  override updated() {\r\n    this.initializeSlide();\r\n  }\r\n\r\n  private changeSlide(offset: number) {\r\n    const slideCount = this.slideElements.length;\r\n    this.slideIndex =\r\n      (slideCount + ((this.slideIndex + offset) % slideCount)) % slideCount;\r\n  }\r\n\r\n  private navigateToPrevSlide() {\r\n    this.changeSlide(-1);\r\n  }\r\n  private navigateToNextSlide() {\r\n    this.changeSlide(1);\r\n  }\r\n\r\n  private initializeSlide() {\r\n    for (let i = 0; i < this.slideElements.length; i++) {\r\n      if (i === this.slideIndex) {\r\n        showSlide(this.slideElements[i]);\r\n      } else {\r\n        hideSlide(this.slideElements[i]);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction getMaxElHeight(els: HTMLElement[]) {\r\n  return Math.max(0, ...els.map((el) => el.getBoundingClientRect().height));\r\n}\r\n\r\nfunction hideSlide(el: HTMLElement) {\r\n  el.classList.add('slide-hidden');\r\n}\r\n\r\nfunction showSlide(el: HTMLElement) {\r\n  el.classList.remove('slide-hidden');\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'simple-carousel': SimpleCarousel;\r\n  }\r\n}\r\n"]}